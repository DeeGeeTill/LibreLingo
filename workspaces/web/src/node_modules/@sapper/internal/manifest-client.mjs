// This file is generated by Sapper â€” do not edit it!
export { default as Root } from '../../../routes/_layout.svelte';
export { preload as root_preload } from '../../../routes/_layout.svelte';
export { default as ErrorComponent } from '../../../routes/_error.svelte';

export const ignore = [];

export const components = [
	{
		js: () => import(/* webpackChunkName: "index" */ "../../../routes/index.svelte"),
		css: "__SAPPER_CSS_PLACEHOLDER:index.svelte__"
	},
	{
		js: () => import(/* webpackChunkName: "development" */ "../../../routes/development.svelte"),
		css: "__SAPPER_CSS_PLACEHOLDER:development.svelte__"
	},
	{
		js: () => import(/* webpackChunkName: "course_$courseName" */ "../../../routes/course/[courseName]/index.svelte"),
		css: "__SAPPER_CSS_PLACEHOLDER:course/[courseName]/index.svelte__"
	},
	{
		js: () => import(/* webpackChunkName: "course_$courseName$93_skill_$91id" */ "../../../routes/course/[courseName]/skill/[id].svelte"),
		css: "__SAPPER_CSS_PLACEHOLDER:course/[courseName]/skill/[id].svelte__"
	},
	{
		js: () => import(/* webpackChunkName: "about" */ "../../../routes/about.svelte"),
		css: "__SAPPER_CSS_PLACEHOLDER:about.svelte__"
	}
];

export const routes = (d => [
	{
		// index.svelte
		pattern: /^\/$/,
		parts: [
			{ i: 0 }
		]
	},

	{
		// development.svelte
		pattern: /^\/development\/?$/,
		parts: [
			{ i: 1 }
		]
	},

	{
		// course/[courseName]/index.svelte
		pattern: /^\/course\/([^\/]+?)\/?$/,
		parts: [
			null,
			{ i: 2, params: match => ({ courseName: d(match[1]) }) }
		]
	},

	{
		// course/[courseName]/skill/[id].svelte
		pattern: /^\/course\/([^\/]+?)\/skill\/([^\/]+?)\/?$/,
		parts: [
			null,
			null,
			null,
			{ i: 3, params: match => ({ courseName: d(match[1]), id: d(match[2]) }) }
		]
	},

	{
		// about.svelte
		pattern: /^\/about\/?$/,
		parts: [
			{ i: 4 }
		]
	}
])(decodeURIComponent);

if (typeof window !== 'undefined') {
	import("C:/Users/georg/Documents/GitHub/LibreLingo/workspaces/web/node_modules/sapper/sapper-dev-client.js").then(client => {
		client.connect(10000);
	});
}